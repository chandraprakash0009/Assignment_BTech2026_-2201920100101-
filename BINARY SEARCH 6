Problem statement (CODING NINJA)
You are given an array 'arr' having 'n' distinct integers sorted in ascending order. The array is right rotated 'r' times



Find the minimum value of 'r'.



Right rotating an array means shifting the element at 'ith' index to (‘i+1') mod 'n' index, for all 'i' from 0 to ‘n-1'.



Example:
Input: 'n' = 5 , ‘arr’ = [3, 4, 5, 1, 2]

Output: 3 

Explanation:
If we rotate the array [1 ,2, 3, 4, 5] right '3' times then we will get the 'arr'. Thus 'r' = 3.

JAVA CODE

import java.util.*;
public class Solution {
    public static int findKRotation(int []arr){
        // Write your code here.
        int left=Integer.MAX_VALUE;
        int low=0;
        int high=arr.length-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(arr[low]<=arr[high]){
                return low;
            }
            if(arr[low]<=arr[mid]){
                if(arr[low]<=arr[left]) left = low;
                low=mid+1;
            }else{
                if(arr[low]<=arr[left]) left=
                left=arr[mid];
                high=mid-1;
            }
        }
        return left;
    }
}
